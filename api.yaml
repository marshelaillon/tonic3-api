openapi: 3.0.1
info:
  title: Virtual Events App Documentation
  version: 1.0.0
  description: API for the application
  termsOfService: https://example.com/terms/
  contact:
    name: P5 Devs
    url: https://example.com/contact/
    email: virutaleventsteam@gmail.com
servers:
  - url: http://localhost:3001/api
    description: development server
  - url: https://virtual-events-t3.herokuapp.com/api
    description: production server
paths:
  /admin/add-event:
    post:
      security: [{ 'bearerAuth': [] }]
      tags:
        - admin
      summary: Adds new event to the events table
      requestBody:
        description: Created event object
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        200:
          description: the event was created successfully
        400:
          description: Bad request
        401:
          description: Unauthorized
  /admin/add-guest:
    post:
      security: [{ 'bearerAuth': [] }]
      tags:
        - admin
      summary: Adds new guest on invitations table
      requestBody:
        description: array of strings with guests emails and event id
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Guest'
        required: true
      responses:
        200:
          description: the guests was created successfully
        400:
          description: Bad request
        401:
          description: Access token is missing or invalid
  /users/register:
    post:
      tags:
        - user
      summary: Creates a new user
      requestBody:
        description: Created user object
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: Register successfully
          content: {}
        400:
          description: Bad request
          content: {}
  /users/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      requestBody:
        description: Object with user email and password
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        200:
          description: Login successfully
          content: {}
        400:
          description: Bad request
          content: {}
  /users/logout:
    get:
      security: [{ 'bearerAuth': [] }]
      tags:
        - user
      summary: Logs out current logged in user session
      responses:
        200:
          description: Logout successfully
          content: {}
  /users/getMe:
    get:
      security: [{ 'bearerAuth': [] }]
      tags:
        - user
      summary: Returns logged in user information
      responses:
        200:
          description: Returns logged in user info except for the password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        403:
          description: Not authorized
          content: {}

components:
  schemas:
    User:
      type: object
      properties:
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          unique: true
        password:
          type: string
          len: [8, 64]
        isAdmin:
          type: boolean
          default: false
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          len: [8, 16]
    Guest:
      type: object
      properties:
        emails:
          type: array
          items:
            type: string
            format: email
            example: 'user@user.com'
        eventId:
          type: number
          example: 3
    Event:
      type: object
      properties:
        title:
          type: string
          example: 'LA VELADA DEL AÑO 2'
        url:
          type: text
          allowNull: false
          example: 'https://www.youtube.com/watch?v=ChxPDdw2Tto'
        description:
          type: text
          allowNull: true
          example: 'La Velada del Año 2 es un gran evento de peleas de boxeo entre streamers organizado por el conocido streamer español Ibai Llanos.'
        date:
          type: string
          format: date-time
          allowNull: false
          example: '07 December 2022, 22:30'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      in: header
